var documenterSearchIndex = {"docs":
[{"location":"getting_started/#Getting-Started","page":"Getting started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/#Contents","page":"Getting started","title":"Contents","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"  Pages = [\"getting_started.md\"]\n  Depth = 3","category":"page"},{"location":"getting_started/#Installation-and-usage","page":"Getting started","title":"Installation and usage","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Installation:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"] add DisjointCliqueCover","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Usage:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"using DisjointCliqueCover ","category":"page"},{"location":"getting_started/#Input-data","page":"Getting started","title":"Input data","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"We need first an undirected network of the SimpleGraph type as provided by package LightGraphs. For example, let us create the following small network:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"<img src=\"../figs/eecc.png\" alt=\"eecc.png\" width=\"450\"/>","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Using LightGraphs functions:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"using LightGraphs\n\nN = 14\nedges_list = [(1, 2), (1, 14), (2, 4), (2, 13), (2, 14), (3, 4), (3, 5), (4, 5), (4, 13),\n              (4, 14), (6, 7), (6, 13), (7, 8), (7, 13), (8, 9), (8, 13), (9, 10), (9, 11),\n              (9, 13), (10, 11), (11, 12), (12, 13), (13, 14)]\n\nG = SimpleGraph(N)\nfor e in edges_list\n  add_edge!(G, e[1], e[2])\nend\nnothing  # hide","category":"page"},{"location":"getting_started/#Edge-disjoint-edge-clique-cover-(EECC)","page":"Getting started","title":"Edge-disjoint edge clique cover (EECC)","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"EECC requires to decide the maximum order of the cliques to consider:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"m₀ = 4\nnothing  # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"To estimate a minimal EECC, just call the get_EECC function:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"using Random  # hide\nRandom.seed!(666)  # hide\neecc = get_EECC(G, m₀)\nnothing  # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"The result is a list of the cliques that form the EECC, where each clique is indicated by the list of nodes it contains:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"for c in eecc\n  println(c)\nend","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"A graph can admit multiple minimal EECC, thus different executions may lead to different estimations. For example, for the same network but with maximum order m₀ = 3 we may get:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"m₀ = 3\nRandom.seed!(666)  # hide\neecc = get_EECC(G, m₀)\nfor c in eecc  # hide\n  println(c)  # hide\nend  # hide\nnothing  # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"but also","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"m₀ = 3\nRandom.seed!(669)  # hide\neecc = get_EECC(G, m₀)\nfor c in eecc  # hide\n  println(c)  # hide\nend  # hide\nnothing  # hide","category":"page"},{"location":"library/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"library/#Contents","page":"Library","title":"Contents","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"  Pages = [\"library.md\"]\n  Depth = 3","category":"page"},{"location":"library/#Index","page":"Library","title":"Index","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"","category":"page"},{"location":"library/#Public","page":"Library","title":"Public","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [DisjointCliqueCover]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"library/#DisjointCliqueCover.get_EECC-Tuple{LightGraphs.SimpleGraphs.SimpleGraph, Int64}","page":"Library","title":"DisjointCliqueCover.get_EECC","text":"get_EECC(G::SimpleGraph, m₀::Int64)\n\nCalculate the edge-disjoint edge clique cover (EECC) of a graph G considering cliques of order up to m₀, according to the heuristic proposed in the paper.\n\nArguments\n\nG::SimpleGraph: a simple graph of the LightGraphs.SimpleGraph type\nm₀::Int64: an integer representing the maximum order of the cliques to consider\n\nReturn\n\nA vector containing the EECC\n\n\n\n\n\n","category":"method"},{"location":"library/#DisjointCliqueCover.limited_maximal_cliques-Tuple{LightGraphs.SimpleGraphs.SimpleGraph, Int64}","page":"Library","title":"DisjointCliqueCover.limited_maximal_cliques","text":"limited_maximal_cliques(G::SimpleGraph, m₀::Int64)\n\nCalculate the maximal cliques of a graph G up to order m₀. Any clique of order m>m₀ is decomposed into its Base.binomial(m, m₀) sub-cliques of order m₀.\n\nArguments\n\nG::SimpleGraph: a simple graph of the LightGraphs.SimpleGraph type\nm₀::Int64: an integer representing the maximum order of the cliques to consider\n\nReturn\n\nA vector containing the maximal cliques up to order m₀\n\n\n\n\n\n","category":"method"},{"location":"#DisjointCliqueCover.jl","page":"Overview","title":"DisjointCliqueCover.jl","text":"","category":"section"},{"location":"#Description","page":"Overview","title":"Description","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This package DisjointCliqueCover, written in the Julia language, implements a method to estimate a minimal edge-disjoint edge clique cover (EECC) of a graph, according to the heuristic presented in Burgio et al. [1]. A minimal edge clique cover is a minimal set of cliques able to cover the entire set of edges in the graph. In a EECC, the cliques are required to be all edge-disjoint, i.e., they can have no more than one node in common.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"A graph can admit multiple minimal edge clique covers and finding one of them is known to be a NP-complete problem [2]. Therefore, approximate heuristics are needed to estimate it in large graphs.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"The notion of EECC is introduced in [1] as a basis to define the Microscopic Epidemic Clique Equations (MECLE) model. This is a discrete-time markovian model describing complex contagion processes on higher-order networks, represented as hypergraphs and, specifically, as simplicial complexes. The model builds upon the cliques in the underlying graph of a considered higher-order network. As shown in [1], in order to account for the higher-order dynamical correlations among the states of the nodes in those cliques, the latter are required to be edje-disjoint. This leads to the search for the EECC of the underlying graph, hence to the respective heuristic whose source code is here provided.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"As an example, the following graph admits a unique minimal EECC","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"<img src=\"./figs/eecc.png\" alt=\"eecc.png\" width=\"450\"/>","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"which is given by","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"using LightGraphs\nusing Random\nusing DisjointCliqueCover\n\nRandom.seed!(666)\n\nN = 14\nedges_list = [(1, 2), (1, 14), (2, 4), (2, 13), (2, 14), (3, 4), (3, 5), (4, 5), (4, 13),\n              (4, 14), (6, 7), (6, 13), (7, 8), (7, 13), (8, 9), (8, 13), (9, 10), (9, 11),\n              (9, 13), (10, 11), (11, 12), (12, 13), (13, 14)]\n\nG = SimpleGraph(N)\nfor e in edges_list\n  add_edge!(G, e[1], e[2])\nend\n\nm₀ = 4 \neecc = get_EECC(G, m₀)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"for c in eecc  # hide\n  println(c)  # hide\nend  # hide","category":"page"},{"location":"#References","page":"Overview","title":"References","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Giulio Burgio, Alex Arenas, Sergio Gómez and Joan T. Matamalas: Network clique cover approximation to analyze complex contagions through group interactions, Comms. Phys. (2021) in press (arXiv:2101.03618)\nLawrence T. Kou, Larry J. Stockmeyer and Chak Kuen Wong: Covering edges by cliques with regard to keyword conflicts and intersection graphs, Comms. ACM 21(2) (1978) 135–139 (doi)","category":"page"},{"location":"#Authors","page":"Overview","title":"Authors","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Giulio Burgio (Universitat Rovira i Virgili, Tarragona, Spain)\nAlex Arenas (Universitat Rovira i Virgili, Tarragona, Spain)\nSergio Gómez (Universitat Rovira i Virgili, Tarragona, Spain)\nJoan T. Matamalas (Harvard Medical School & Brigham and Women's Hospital, Boston, USA)","category":"page"}]
}
